{"version":3,"sources":["logo.svg","component/Navigation.js","component/Home.js","api-component/UserList.js","component/User.js","api-component/PostList.js","component/Post.js","component/NoMatch.js","component/Main.js","component/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","react_default","a","createElement","className","src","logo","alt","Link","to","Component","Home","UserList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getUsers","event","preventDefault","setState","isLoading","fetch","then","response","json","data","users","close","Close","state","Fragment","class","onClick","href","map","user","index","name","User","api_component_UserList","PostList","posts","_this2","post","key","id","title","body","Post","api_component_PostList","NoMatch","Main","Switch","Route","path","exact","component","Footer","App","BrowserRouter","component_Navigation","component_Main","component_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.77823913.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport {BrowserRouter, Route, Link} from 'react-router-dom';\n\nimport logo from '../logo.svg';\nimport Global from '../Global.css';\nimport App from '../App.css';\n\nclass Navigation extends Component {\n//export const Navigation = (props) => {\n\trender() {\n\t\treturn (\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t\t<Link to={\"/\"} className=\"nav-link\">Home</Link>\n\t\t\t\t<Link to={\"/api-users\"} className=\"nav-link\">User API</Link>\n                <Link to={\"/api-posts\"} className=\"nav-link\">Post API</Link>\n\t\t\t</nav>\n\t\t)\n\t}\n}\n\nexport default Navigation;","import React, { Component } from 'react';\n\nclass Home extends Component {\n\trender(){\n\t\treturn (\n\t\t\t<h1>HALAMAN HOME</h1>\n\t\t)\n\t}\n}\n\nexport default Home;","import React, { Component } from 'react';\n\nclass UserList extends Component {\n\tconstructor (props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tusers: [],\n\t\t\tisLoading: false,\n\t\t\t'close': ''\n\t\t}\n\t}\n\n\tgetUsers = (event) => {\n\t\tevent.preventDefault()\n\t\t\tthis.setState({\n\t\t\t\t\tisLoading: 'Loading........'\n\t\t\t\t})\n\t\t//event.setTimeOut(()=> {\n\t\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => this.setState({ users: data, isLoading: false, close: 'x' }))\n\t\t//}, 2000)\n\t}\n\n\tClose = (event) => {\n\t\tevent.preventDefault()\n\t\tthis.setState({\n\t\t\tusers: [],\n\t\t\tisLoading: false,\n\t\t\t'close': ''\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\t<div className=\"card-header\">\n\t\t\t\t\t\t<a onClick={this.getUsers} href='#' className=\"success\">Daftar Users</a>\n\t\t\t\t\t\t<span onClick={this.Close} className=\"close\">{this.state.close}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t<span>{this.state.isLoading}</span>\n\t\t\t\t\t\t{this.state.users.map((user, index) => \n\t\t\t\t\t\t\t<p className=\"userList\">{user.name}</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nexport default UserList;","import React, { Component } from 'react';\n\nimport UserList from '../api-component/UserList'\n\nclass User extends Component {\n\trender(){\n\t\treturn (\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n    \t\t\t     <h1 className=\"text-center\">USER API</h1>\n                </div>\n                \n                <div className=\"col-sm-6\">\n                    <UserList/>\n                </div>\n            </div>\n\t\t)\n\t}\n}\n\nexport default User;","import React, { Component } from 'react';\n\nclass PostList extends Component {\n    constructor (props){\n        super(props)\n        this.state = {\n            posts: [],\n        }\n    }\n\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/posts\")\n        .then(response => response.json())\n        .then(data => this.setState({ posts: data}))\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.state.posts.map((post) => \n                    <div className=\"col-md-3 post-index\">\n                        <div class=\"card\" key={post.id}>\n                            <div className=\"card-header\">\n                                {post.title}\n                            </div>\n                            <div className=\"card-body\">\n                                {post.body}\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PostList;","import React, { Component } from 'react';\n\nimport PostList from '../api-component/PostList'\n\nclass Post extends Component {\n    render(){\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                     <h1 className=\"text-center\">Post API</h1>\n                </div>\n                \n                <PostList/>\n                \n            </div>\n        )\n    }\n}\n\nexport default Post;","import React, { Component } from 'react';\n\nclass NoMatch extends Component {\n\trender(){\n\t\treturn (\n\t\t\t<h1>NOT FOUND</h1>\n\t\t)\n\t}\n}\n\nexport default NoMatch;","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route, Link, browserHistory} from 'react-router-dom';\n\nimport Home from './Home';\nimport User from './User';\nimport Post from './Post';\nimport NoMatch from './NoMatch';\n\nclass Main extends Component {\n\trender(){\n\t\treturn (\n      \t\t<Switch>\n                <Route path={'/'} exact component={Home} />\n                <Route path={'/api-users'} exact component={User} />\n                <Route path={'/api-posts'} exact component={Post} />\n                <Route component={NoMatch} />\n            </Switch>\n\t\t)\n\t}\n}\n\nexport default Main;","import React, { Component } from 'react';\n\nimport logo from '../logo.svg';\n\nclass Footer extends Component {\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"footer\">\n\t\t\t\t<h5 className=\"text-center\">\n                    <img src={logo} className=\"App-logo foot-logo\" alt=\"logo\" />\n                </h5>\n\t\t\t\t<p className=\"text-center\">Copyright 2019, <i><a href=\"mailto:heryfidiawan07@gmail.com\">@hery_dev</a></i></p>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route, Link, browserHistory} from 'react-router-dom';\n\nimport Navigation from './component/Navigation';\nimport Main from './component/Main';\nimport Footer from './component/Footer';\n\nclass App extends Component {\n    render() {\n        return (\n    \t    <BrowserRouter>\n                <React.Fragment>\n            \n                    <Navigation/>\n            \n                    <div className=\"container content\">\n                        <Main/>\n                    </div>\n\n                    <Footer/>\n\n                </React.Fragment>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}